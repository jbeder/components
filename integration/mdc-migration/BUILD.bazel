load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("//tools:defaults.bzl", "ts_library")
load(":migration-test.bzl", "migration_test")

ts_library(
    name = "verify_golden_lib",
    srcs = ["verify-golden.ts"],
    # TODO(ESM): remove this once the Bazel NodeJS rules can handle ESM with `nodejs_binary`.
    devmode_module = "commonjs",
    deps = [
        "@npm//@types/node",
    ],
)

nodejs_binary(
    name = "verify_golden",
    data = [":verify_golden_lib"],
    entry_point = ":verify-golden.ts",
    templated_args = ["--bazel_patch_module_resolver"],
)

filegroup(
    name = "test_project",
    srcs = glob([
        "sample-project/**/*",
    ]),
)

filegroup(
    name = "golden_project",
    srcs = glob([
        "golden/**/*",
    ]),
)

migration_test(
    name = "test",
    srcs = glob([
        "golden/**/*",
        "sample-project/**/*",
    ]),
    approve = False,
)

migration_test(
    name = "test.approve",
    srcs = glob([
        "golden/**/*",
        "sample-project/**/*",
    ]),
    approve = True,
)
